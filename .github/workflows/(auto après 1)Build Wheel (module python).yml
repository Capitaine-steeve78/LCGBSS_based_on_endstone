#test
name: build Wheel (module python) 

on:
  workflow_dispatch:
  release:
    types: [published]
  workflow_run:
    workflows: ["Compilation et Tests"]
    types:
      - completed

permissions:
  contents: read

jobs:
  build_wheels:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    name: Build Wheel (${{ matrix.python-tag }}-${{ matrix.platform }})
    runs-on: ${{ matrix.os == 'Windows' && '["self-hosted","Windows","X64"]' || matrix.os == 'linux' && '["self-hosted","linux","x64"]' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ linux, Windows ]
        python-tag: [ "cp39", "cp310", "cp311", "cp312", "cp313", "cp314" ]
        include:
          - os: linux
            platform: manylinux_x86_64
          - os: Windows
            platform: win_amd64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Cache Conan
        uses: actions/cache@v4
        with:
          path: ~/.conan2/p
          key: ${{ runner.os }}-conan-RelWithDebInfo-${{ hashFiles('conanfile.py') }}
          restore-keys: |
            ${{ runner.os }}-conan-RelWithDebInfo-

      - name: Set up MSVC (Windows)
        if: matrix.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_64

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Set Conan Home (Linux)
        if: matrix.os == 'linux'
        run: echo "CONAN_HOME=/host${HOME}/.conan2" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_BUILD: ${{ matrix.python-tag }}-${{ matrix.platform }}
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_PASS_LINUX: "CONAN_HOME"

      - name: Change permission for Conan home folder (Linux)
        if: matrix.os == 'linux'
        run: sudo chown -R $USER:$USER ~/.conan2

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: endstone-wheels-${{ matrix.python-tag }}-${{ matrix.platform }}
          path: ./wheelhouse/*.whl

  publish:
    name: Publish Wheels to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: linux
    needs: [ build_wheels ]
    environment: pypi
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Restore Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: endstone-wheels-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
