name: Build Endstone

on:
  workflow_dispatch:

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Upgrade pip
      run: python -m pip install --upgrade pip
      shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}

    - name: Install Conan and pybind11
      run: |
        python -m pip install conan pybind11
      shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}

    - name: Configure Conan profile
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          conan profile detect --force
          conan profile update settings.compiler=clang default
          conan profile update settings.compiler.version=17 default
          conan profile update settings.compiler.libcxx=libc++ default
        else
          conan profile detect --force
          conan profile update settings.compiler=msvc default
          conan profile update settings.compiler.version=193 default
          conan profile update settings.compiler.runtime=MD default
        fi
      shell: bash

    - name: Install Conan dependencies
      run: conan install . --build=missing
      shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}

    - name: Configure CMake
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_PREFIX_PATH="$(python3 -m pybind11 --cmake-dir)"
        else
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
        fi
      shell: bash

    - name: Build
      run: cmake --build build --config Release
      shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}
