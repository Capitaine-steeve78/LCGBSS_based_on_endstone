name: Build with Conan and CMake

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2022]
        compiler: [clang, msvc]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Conan
        run: pip install conan

      - name: Install dependencies with Conan
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            conan install . \
              --build=missing \
              -s compiler.cppstd=20 \
              -s compiler=clang \
              -s build_type=Release \
              -o cpptrace/*:unwind_with_nothing=True \
              -g cmake
          else
            conan install . `
              --build=missing `
              -s compiler=Visual Studio `
              -s compiler.cppstd=20 `
              -s build_type=Release `
              -o cpptrace/*:unwind_with_nothing=True `
              -g cmake

      - name: Configure and Build CMake
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cmake -S . -B build/Release -G Ninja \
              -DCMAKE_TOOLCHAIN_FILE=generators/conan_toolchain.cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DCPPTRACE_UNWIND_WITH_NOTHING=ON
            cmake --build build/Release
          else
            $toolchain = "generators\conan_toolchain.cmake"
            cmake -S . -B build/Release -G "Visual Studio 17 2022" `
              -A x64 `
              -DCMAKE_TOOLCHAIN_FILE=$toolchain `
              -DCMAKE_BUILD_TYPE=Release `
              -DCPPTRACE_UNWIND_WITH_NOTHING=ON
            cmake --build build/Release --config Release
