name: Build and Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]

    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      # 2️⃣ Setup Python & Conan
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - run: |
          python -m pip install --upgrade pip
          pip install conan

      # 3️⃣ Install compiler / build tools
      - name: Setup Linux Compiler
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang-16 cmake ninja-build libunwind-dev
          echo "CC=clang-16" >> $GITHUB_ENV
          echo "CXX=clang++-16" >> $GITHUB_ENV

      - name: Setup Windows Compiler
        if: matrix.os == 'windows-2022'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # 4️⃣ Install dependencies
      - run: |
          conan profile detect --force
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            conan install . --build=missing -s compiler=clang -s compiler.version=16 -s compiler.cppstd=20 -s build_type=Release
          else
            conan install . --build=missing -s build_type=Release
          fi

      # 5️⃣ Configure & build
      - run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
            cmake --build build --parallel
          else
            cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
            cmake --build build --config Release
          fi

      # 6️⃣ Run tests
      - run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            ctest --test-dir build --output-on-failure
          else
            ctest -C Release --test-dir build --output-on-failure
          fi

      # 7️⃣ Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build
